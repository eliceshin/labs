filename <- "femaleMiceWeights.csv"
dat <- read.csv(filename)
filename <- "femaleMiceWeights.csv"
dat <- read.csv(filename)
head(dat) #In R Studio use View(dat)
filename <- "femaleMiceWeights.csv"
dat <- read.csv(filename)
There are two types of diets, which are denoted in the first column. If we want just the weights, we only need the second column. So if we want the weights for mice on the `chow` diet, we subset and filter like this:
```{r,message=FALSE}
library(dplyr)
library(dplyr)
chow <- filter(dat, Diet=="chow") #keep only the ones with chow diet
head(chow)
And now we can select only the column with the values:
```{r}
chowVals <- select(chow,Bodyweight)
chowVals <- select(chow,Bodyweight)
A nice feature of the `dplyr` package is that you can perform consecutive tasks by using what is called a "pipe". In `dplyr` we use `%>%` to denote a pipe. This symbol tells the program to first do one thing and then do something else to the result of the first. Hence, we can perform several data manipulations in one line. For example:
```{r}
filename <- "femaleMiceWeights.csv"
filename <- "C:/Users/ejs3323/Desktop/Github/dagdata/inst/extdata/femaleMiceWeights.csv"
dat <- read.csv(filename)
filename <- "Users/ejs3323/Desktop/Github/dagdata/inst/extdata/femaleMiceWeights.csv"
dat <- read.csv(filename)
C:/
e
filename <- "C:/Users/ejs3323/Desktop/Github/dagdata/inst/extdata/femaleMiceWeights.csv"
dat <- read.csv(filename)
filename <- "Users/ejs3323/Desktop/Github/dagdata/inst/extdata/femaleMiceWeights.csv"
dat <- read.csv(filename)
C:
dat <- read.csv(filename)
filename <- "C:/Users/ejs3323/Desktop/Github/dagdata/inst/extdata/femaleMiceWeights.csv"
dat <- read.csv(filename)
head(dat) #In R Studio use View(dat)
library(dplyr)
chow <- filter(dat, Diet=="chow") #keep only the ones with chow diet
head(chow)
chowVals <- select(chow,Bodyweight)
head(chowVals)
?select
chowVals <- filter(dat, Diet=="chow") %>% select(Bodyweight)
class(dat)
class(chowVals)
chowVals <- filter(dat, Diet=="chow") %>% select(Bodyweight) %>% unlist
chowVals <- filter(dat, Diet=="chow") %>% select(Bodyweight) %>% unlist
class( chowVals )
class(chowVals)
class( chowVals )
chowVals <- dat[ dat$Diet=="chow", colnames(dat)=="Bodyweight"]
library(downloader)
library(downloader)
